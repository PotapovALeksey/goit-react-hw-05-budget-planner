{"version":3,"sources":["components/Notification/Notification.module.css","redux/budget/budgetActions.js","redux/budget/budgetReducer.js","redux/expenses/expensesActions.js","redux/expenses/expensesReducer.js","redux/store.js","components/Form/Form.styled.js","components/Form/Form.js","components/Label/Label.styled.js","components/Label/Label.js","components/Input/Input.styled.js","components/Input/Input.js","components/Button/Button.styled.js","components/Button/Button.js","components/BudgetForm/BudgetForm.js","components/BudgetForm/BudgetFormContainer.js","components/Notification/Notification.js","components/ExpenseForm/ExpenseForm.js","components/ExpenseForm/ExpenseFormContainer.js","redux/expenses/expensesSelectors.js","components/ExpensesTable/ExpensesTable.styled.js","components/ExpensesTable/ExpensesTable.js","components/ExpensesTable/ExpensesTableContainer.js","components/Stats/Stats.styled.js","components/Stats/Stats.js","components/Values/Values.js","redux/budget/budgetSelectors.js","components/App.js","index.js"],"names":["module","exports","text","ActionType","budgetReducer","state","arguments","length","undefined","_ref","type","payload","expensesReducer","concat","Object","toConsumableArray","filter","item","id","rootReducer","combineReducers","budget","balanceReducer","expenses","store","createStore","devToolsEnhancer","StyledForm","styled","form","_templateObject","Form","_ref$onSubmit","onSubmit","children","react_default","a","createElement","Form_styled","StyledLabel","label","Label_styled_templateObject","props","customStyles","Label","Label_styled","StyledInput","input","Input_styled_templateObject","Input","_ref$type","_ref$value","value","_ref$onChange","onChange","_ref$name","name","Input_styled","defaultProps","StyledButton","button","Button_styled_templateObject","Button","_ref$label","_ref$onClick","onClick","Button_styled","BudgetForm","handleChange","e","_this","setState","target","handleSubmit","preventDefault","onSave","Number","toFixed","this","components_Form_Form","components_Label_Label","components_Input_Input","components_Button_Button","Component","connect","dispatch","budgetActions","Notification","className","styles","ExpenseForm","amount","incorrectName","incorrectAmount","defineProperty","_this$state","test","formatedAmount","parseFloat","addExpense","_this$state2","components_Notification_Notification","shortid","generate","expensesActions","getExpenses","Table","table","ExpensesTable_styled_templateObject","ExpensesTable","_ref$expenses","deleteExpense","ExpensesTable_styled","map","_ref2","key","expenseSelectors","Container","div","Stats_styled_templateObject","isPositive","p","_templateObject2","Value","_templateObject3","Stat","Stats_styled_Label","section","Values_templateObject","Values","balance","Values_Container","Stats","getBudget","App_templateObject","App","totalExpenses","reduce","total","expense","acc","calculateTotalExpenses","calculateBalance","App_Container","BudgetFormContainer","components_Values_Values","ExpenseFormContainer","ExpensesTableContainer","budgetSelectors","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.b9fd92e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__9ftEI\"};","export const ActionType = {\n  CHANGE_BALANCE: 'CHANGE_BALANCE',\n};\n\nexport const changeBalance = value => ({\n  type: ActionType.CHANGE_BALANCE,\n  payload: value,\n});\n","import { ActionType } from './budgetActions';\n\nconst budgetReducer = (state = 0, { type, payload }) => {\n  switch (type) {\n    case ActionType.CHANGE_BALANCE:\n      return payload;\n    default:\n      return state;\n  }\n};\n\nexport default budgetReducer;\n","import shortid from 'shortid';\n\nexport const ActionType = {\n  ADD_EXPENSE: 'ADD_EXPENSE',\n  DELETE_EXPENSE: 'DELETE_EXPENSE',\n};\n\nexport const addExpense = (name, amount) => ({\n  type: ActionType.ADD_EXPENSE,\n  payload: { id: shortid.generate(), name, amount },\n});\n\nexport const deleteExpense = id => ({\n  type: ActionType.DELETE_EXPENSE,\n  payload: id,\n});\n","import { ActionType } from './expensesActions';\n\nconst expensesReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case ActionType.ADD_EXPENSE:\n      return [payload, ...state];\n    case ActionType.DELETE_EXPENSE:\n      return state.filter(item => item.id !== payload);\n    default:\n      return state;\n  }\n};\n\nexport default expensesReducer;\n","import { createStore, combineReducers } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nimport balanceReducer from './budget/budgetReducer';\nimport expensesReducer from './expenses/expensesReducer';\n\nconst rootReducer = combineReducers({\n  budget: balanceReducer,\n  expenses: expensesReducer,\n});\n\nconst store = createStore(rootReducer, devToolsEnhancer());\n\nexport default store;\n","import styled from 'styled-components';\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  width: 100%;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport default StyledForm;\n","import PropTypes from 'prop-types';\nimport React from '../../../node_modules/react';\nimport StyledForm from './Form.styled';\n\nconst Form = ({ onSubmit = () => null, children }) => (\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\n);\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Form;\n","import styled from 'styled-components';\n\nconst StyledLabel = styled.label`\n  display: inline-block;\n  font-size: 20px;\n  color: #171718;\n  cursor: pointer;\n  ${props => props.customStyles}\n`;\n\nexport default StyledLabel;\n","import PropTypes from 'prop-types';\nimport React from '../../../node_modules/react';\nimport StyledLabel from './Label.styled';\n\nconst Label = ({ children, customStyles }) => (\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\n);\n\nLabel.propTypes = {\n  children: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  ).isRequired,\n  customStyles: PropTypes.string.isRequired,\n};\n\nexport default Label;\n","import styled from 'styled-components';\n\nconst StyledInput = styled.input`\n  color: #171718;\n  font: inherit;\n  font-size: 1.2rem;\n  padding: 16px;\n  border-radius: 4px;\n  border: 1px solid #bdbdbd;\n  width: 365px;\n  outline: 0;\n\n  &:focus {\n    border: 1px solid #2b32b2;\n  }\n`;\n\nexport default StyledInput;\n","import PropTypes from 'prop-types';\nimport React from '../../../node_modules/react';\nimport StyledInput from './Input.styled';\n\nconst Input = ({\n  type = 'text',\n  value = '',\n  onChange = () => null,\n  name = '',\n}) => <StyledInput type={type} value={value} onChange={onChange} name={name} />;\n\nInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string,\n};\n\nInput.defaultProps = {\n  name: '',\n};\n\nexport default Input;\n","import styled from 'styled-components';\n\nconst StyledButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  background-color: #3f51b5;\n  border: 0;\n  outline: 0;\n  padding: 8px 24px;\n  border-radius: 4px;\n  cursor: pointer;\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\n  font: inherit;\n  text-transform: uppercase;\n  user-select: none;\n\n  transition: background-color 200ms ease-in-out;\n\n  &:hover {\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\n    background-color: #303f9f;\n  }\n`;\n\nexport default StyledButton;\n","import PropTypes from 'prop-types';\nimport React from '../../../node_modules/react';\nimport StyledButton from './Button.styled';\n\nconst Button = ({ type = 'button', label = '', onClick = () => null }) => (\n  <StyledButton type={type} onClick={onClick}>\n    {label}\n  </StyledButton>\n);\n\nButton.propTypes = {\n  type: PropTypes.string,\n  label: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nButton.defaultProps = {\n  onClick: () => null,\n  type: 'button',\n  label: '',\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Form from '../Form/Form';\nimport Label from '../Label/Label';\nimport Input from '../Input/Input';\nimport Button from '../Button/Button';\n\nconst labelStyles = `\n  margin-bottom: 16px;  \n`;\n\nexport default class BudgetForm extends Component {\n  state = { budget: '' };\n\n  static propTypes = {\n    onSave: PropTypes.func.isRequired,\n  };\n\n  handleChange = e => {\n    this.setState({\n      budget: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSave(Number(this.state.budget).toFixed(2));\n\n    this.setState({ budget: '' });\n  };\n\n  render() {\n    const { budget } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter your total budget\n          <Input type=\"number\" value={budget} onChange={this.handleChange} />\n        </Label>\n\n        <Button label=\"Save\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport BudgetForm from './BudgetForm';\nimport * as budgetActions from '../../redux/budget/budgetActions';\n\nconst mapDispatchToProps = dispatch => ({\n  onSave: value => dispatch(budgetActions.changeBalance(value)),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(BudgetForm);\n","import PropTypes from 'prop-types';\nimport React from '../../../node_modules/react';\nimport styles from './Notification.module.css';\n\nconst Notification = ({ text }) => <span className={styles.text}>{text}</span>;\n\nNotification.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\nimport React, { Component } from '../../../node_modules/react';\nimport Form from '../Form/Form';\nimport Label from '../Label/Label';\nimport Input from '../Input/Input';\nimport Button from '../Button/Button';\nimport Notification from '../Notification/Notification';\n\nconst labelStyles = `\n  margin-bottom: 16px;  \n`;\n\nexport default class ExpenseForm extends Component {\n  state = {\n    name: '',\n    amount: '',\n    incorrectName: false,\n    incorrectAmount: false,\n  };\n\n  static propTypes = {\n    addExpense: PropTypes.func.isRequired,\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, amount } = this.state;\n\n    if (!/[a-zA-Z]/.test(name) || !(name.length >= 3)) {\n      this.setState({ incorrectName: true });\n      return;\n    }\n\n    if (Number(amount) === 0) {\n      this.setState({ incorrectAmount: true });\n      return;\n    }\n    this.setState({ incorrectName: false, incorrectAmount: false });\n    const formatedAmount = parseFloat(Number(amount).toFixed(2));\n\n    this.props.addExpense(name, formatedAmount);\n\n    this.setState({ name: '', amount: '' });\n  };\n\n  render() {\n    const { name, amount, incorrectName, incorrectAmount } = this.state;\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter expense name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n        </Label>\n        {incorrectName && (\n          <Notification text=\" The name must contain Latin letters and be longer than 2 characters.\" />\n        )}\n        <Label customStyles={labelStyles}>\n          Enter expense amount\n          <Input\n            type=\"number\"\n            name=\"amount\"\n            value={amount}\n            onChange={this.handleChange}\n          />\n        </Label>\n        {incorrectAmount && (\n          <Notification text=\"quantity must be greater than 0\" />\n        )}\n\n        <Button label=\"Add\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport * as expensesActions from '../../redux/expenses/expensesActions';\nimport ExpenseForm from './ExpenseForm';\n\nconst mapDispatchToProps = dispatch => ({\n  addExpense: (name, amount) =>\n    dispatch(expensesActions.addExpense(name, amount)),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(ExpenseForm);\n","export const getExpenses = state => state.expenses;\n\nexport const goodBuyEsLint = () => null;\n","import styled from 'styled-components';\n\nconst Table = styled.table`\n  border-collapse: collapse;\n  text-align: center;\n  width: 100%;\n\n  tr {\n    border-bottom: 1px solid #212121;\n  }\n\n  td,\n  th {\n    padding-top: 8px;\n    padding-bottom: 8px;\n  }\n`;\n\nexport default Table;\n","import PropTypes from 'prop-types';\nimport React from '../../../node_modules/react';\nimport Button from '../Button/Button';\nimport Table from './ExpensesTable.styled';\n\nconst ExpensesTable = ({ expenses = [], deleteExpense }) => {\n  return (\n    expenses.length > 0 && (\n      <Table>\n        <thead>\n          <tr>\n            <th>Expense name</th>\n            <th>Expense amount</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {expenses.map(({ id, name, amount }) => (\n            <tr key={id}>\n              <td>{name}</td>\n              <td>{amount}</td>\n              <td>\n                <Button label=\"Delete\" onClick={() => deleteExpense(id)} />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    )\n  );\n};\n\nExpensesTable.propTypes = {\n  deleteExpense: PropTypes.func.isRequired,\n  expenses: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      amount: PropTypes.number,\n    }),\n  ).isRequired,\n};\n\nexport default ExpensesTable;\n","import { connect } from 'react-redux';\nimport * as expenseSelectors from '../../redux/expenses/expensesSelectors';\nimport * as expensesActions from '../../redux/expenses/expensesActions';\nimport ExpensesTable from './ExpensesTable';\n\nconst mapStateToProps = state => ({\n  expenses: expenseSelectors.getExpenses(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteExpense: id => dispatch(expensesActions.deleteExpense(id)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ExpensesTable);\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  text-align: center;\n  padding: 8px 24px;\n  color: ${props => (props.isPositive ? '#388E3C' : '#D32F2F')};\n  user-select: none;\n`;\n\nexport const Label = styled.p`\n  margin-top: 0;\n  margin-bottom: 8px;\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 24px;\n`;\n\nexport const Value = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 48px;\n`;\n","import PropTypes from 'prop-types';\nimport React from '../../../node_modules/react';\nimport { Container, Label, Value } from './Stats.styled';\n\nconst Stat = ({ label, value, isPositive }) => (\n  <Container isPositive={isPositive}>\n    <Label>{label}</Label>\n    <Value>{value}&nbsp;&#x24;</Value>\n  </Container>\n);\n\nStat.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  isPositive: PropTypes.bool,\n};\n\nStat.defaultProps = {\n  isPositive: false,\n};\n\nexport default Stat;\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport React from '../../../node_modules/react';\nimport Stat from '../Stats/Stats';\n\nconst Container = styled.section`\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Values = ({ budget, expenses, balance }) => (\n  <Container>\n    <Stat label=\"Budget\" value={budget} isPositive />\n    <Stat label=\"Expenses\" value={expenses} />\n    <Stat label=\"Balance\" value={balance} isPositive={balance >= 0} />\n  </Container>\n);\n\nValues.propTypes = {\n  budget: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  expenses: PropTypes.number.isRequired,\n  balance: PropTypes.string.isRequired,\n};\n\nexport default Values;\n","export const getBudget = state => state.budget;\n\nexport const goodBuyEsLint = () => null;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport BudgetForm from './BudgetForm/BudgetFormContainer';\nimport ExpenseForm from './ExpenseForm/ExpenseFormContainer';\nimport ExpensesTable from './ExpensesTable/ExpensesTableContainer';\nimport Values from './Values/Values';\nimport * as budgetSelectors from '../redux/budget/budgetSelectors';\nimport * as expenseSelectors from '../redux/expenses/expensesSelectors';\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 400px 1fr;\n  align-items: flex-start;\n  grid-gap: 24px;\n  width: 1000px;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst calculateTotalExpenses = expenses => {\n  return expenses.reduce((total, expense) => {\n    let acc = total;\n\n    acc += expense.amount;\n\n    return acc;\n  }, 0);\n};\n\nconst calculateBalance = (budget, expenses) => budget - expenses;\n\nconst App = ({ expenses, budget }) => {\n  const totalExpenses = calculateTotalExpenses(expenses);\n  const balance = calculateBalance(budget, totalExpenses).toFixed(2);\n\n  return (\n    <Container>\n      <BudgetForm />\n      <Values budget={budget} expenses={totalExpenses} balance={balance} />\n      <ExpenseForm />\n      <ExpensesTable />\n    </Container>\n  );\n};\n\nApp.propTypes = {\n  budget: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  expenses: PropTypes.arrayOf(PropTypes.object),\n};\n\nApp.defaultProps = {\n  expenses: [],\n  budget: 0,\n};\n\nconst mapStateToProps = state => ({\n  budget: budgetSelectors.getBudget(state),\n  expenses: expenseSelectors.getExpenses(state),\n});\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(App);\n","import { Provider } from 'react-redux';\nimport React from '../node_modules/react';\nimport ReactDOM from '../node_modules/react-dom';\nimport store from './redux/store';\nimport App from './components/App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}